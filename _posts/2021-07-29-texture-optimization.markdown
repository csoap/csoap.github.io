---
layout:     post
title:      "unity的贴图打包格式优化"
subtitle:   "贴图原理与优化"
date:       2019-11-29
author:     "CSoap"
header-img: "img/home-bg-o.jpg"
tags:
    - 优化
---

阅读清单
- 模型贴图
    - 模型贴图由那些构成
        - ALBEDO 漫反射
        - NORMAL  法线贴图
        - METALLIC 金属度贴图
        - ROUGHNESS 粗壮度贴图
        - AO (Ambient Occlusion) 环境光遮蔽贴图 仅黑白灰三色
- ui贴图

- 贴图打包流程
    - png->ETC2(比如android)->ab包->apk
- 贴图加载流程
    - 加载ab包->解包ab拿到etc2->解压生成二维数组，每个元素就是图片的rgb值，存到内存中,内存无法直接拿这些数据来渲染->加载到显存，显存进行渲染->通过GPU渲染生成帧缓存，帧缓存是最终存储将来要显示的屏幕画面。
    - android平台为什么推荐etc2，只要是2015后的显卡，支持未经过解压的ETC2格式的图片直接利用显卡生成，（跳过解压到内存，内存加载到显存的过程）
- 为什么要做贴图压缩？
    - GPU:
        - 贴图资源变小，渲染带宽占用更低
    - 包体大小:
        - 包体更小
        - 下载更快
    - 内存占用：
        - 运行时占用内存更小

- 颜色格式
    - RGB
    - RGBA
- 颜色表示，亮度值
    - LDR: 0.0~1.0
    - HDR: 0.0~无穷大 ，如太阳光，超过1.0的亮度值
- unity使用PSD/PNG/JPG格式的图片吗？
    - 不。这些格式是经过压缩的，不支持像素的随机访问，需要耗时的解压过程。比如512*512的图片，无法通过img[x][y]得到像素地址。所以unity使用texture2D这个格式，在打包的时候打包成各个平台对应的不同压缩格式。

![不同平台可以使用的贴图格式](http://csoap.github.io/img/in-post/post-js-version/compressed-texture.png "不同平台可以使用的贴图格式")

- 纹理压缩的基本概念
    - 压缩比度量BPP（每个像素压缩以后所占的存储位数），每个像素压缩以后所占的存储位数越少，说明压缩比越高，占用的显存的存储容量越低，耗费显卡带宽越低，
    - 压缩算法：块压缩算法
        - 什么是块压缩算法？把每4行4列的像素点分成一个块，按块来进行压缩
        - 有何特点？ 
            - 压缩速率固定
            - 内存压缩，所以实际在内存中的开销是减小的
        - 支持块压缩主流压缩格式的有：PC的DXT格式（DXT有1-5，常见的是1、5）、android的ETC格式
    - 压缩算法：Crunch纹理压缩。
        - 支持可变比特率压缩（取决于内容，如果内容变化比较小，压缩比就比较高，如纯红，压缩就非常非常小），压缩比率更高
        - 文件压缩，仅仅能压缩一个图片在磁盘上存储大小，但是解压以后的图片大小是跟压缩格式（etc、dxt等）有关
        - 可以不使用crunch纹理压缩，但是仍然可以使用etc 或者dxt，但是也可以为了磁盘存储大小而使用crunch纹理压缩。
- ASTC 压缩格式，更推荐，压缩比更高，把每n行n列的像素点分成一个块，按块来进行压缩,压缩快大小可调。并且支持高动态范围光照HDR，颜色值可以超过1.0

- ios平台推荐PVRTC
    - 优点：保证图片比较清晰，比较小
    - 缺点：对透明的支持不好，比如拿字符集图片，RGBA Compressed PVRTC格式的图片比较模糊，RGB Compressed PVRTC比较清晰
    - PVRTC贴图的要求
        - 正方形的纹理
        - 2 的n次方，这个如何保证？
        - 宽、高都能被4整除
- DXT 是PC主流的
- ETC 是android主流的
    - 与DXT方式类似，都是基于块的压缩
    - ETC1 不支持透明，需要借助一张额外的贴图存储透明信息，以及一个unity内置的shader进行透明混合
    - ETC2 支持透明
    - 需要二次方 长宽可不一样
- ASTC,通用支持android、ios
    - 支持HDR
    - 支持透明
    - 压缩比高
    - 压缩快大小可调 （12 * 12 ~ 4 * 4）

| 压缩快大小 | bpp |
| :-----| ----: |
| 12*12 | 0.11 |
| 10*10 | 0.16 |
| 8*8 | 0.25 |
| 6*6 | 0.45 |
| 5*5 | 0.64 |
| 4*4 | 1.0 |
- 问题：ios或android手机 究竟哪些手机可以支持ASTC格式？如何在项目中运用astc？
- 回退机制
    比如安卓手机不支持ETC2，会回退到ETC2 fallback设置的参数，例子：每个像素32位（有点太大），如何设置如下
    - 例：File-> BuildSeting->选择android平台，有个ETC2 fallback，设置32bit

