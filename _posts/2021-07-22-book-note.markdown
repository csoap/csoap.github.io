---
layout:     post
title:      "一本书一些笔记"
subtitle:   "个人学习清单"
date:       2021-07-22
author:     "CSoap"
header-img: "img/home-bg-o.jpg"
tags:
    - 其他
---

阅读书籍的时候，当下记住了知识点，但是之后可能容易忘记了，所以做一些简易的恢复性笔记，下次阅读的时候能回忆起知识点。

阅读清单
- 《计算机是怎样跑起来的》
	> 为了重新巩固计算机基础知识，重新翻起这本n年读过的书，2天就看完了，做个热身。 2021-07-24
	- 一个汉字多少字节，GBK字符编码为2个， UTF8为3个。为什么？这边需要深入了
	解编码原理。
	- 内存内部被分割成了
若干个数据存储单元，每个单元可以存储 8 比特的数据（8 比特 = 1 字
节，8位 = 1字节, 位英文binary digit 缩写 bit）
	- 计算机三大原则
		- 计算机是执行输入、运算、输出的机器
		- 程序是**指令**和**数据**的集合
		- 计算机的处理方式有时与人们的思维习惯不同
	- 计算机是执行程序的机器。程序是指令和数据的集合。为了使互
联网上相互连接的计算机能通过程序协同工作，微软公司采用了 SOAP
以及 XML 规范。SOAP 是关于调用指令的规范，XML 则是定义数据
格式的规范。
	- CPU 是计算机的大脑，在其内部可对数据执行运算并控制内存和
I/O。内存用于存储指令和数据。I/O 负责把键盘、鼠标、显示器等周边
设备和主机连接在一起，实现数据的输入与输出
	- 什么是机器语言？ 由二进制数字构成的程序，CPU可以直接对其解释、执行
	- CPU 中有各种各样的各司其职的寄存器。其中有一个被称为 PC
（Program Counter，程序计数器）的寄存器，负责存储内存地址，该地
址指向下一条即将执行的指令。**每解释执行完一条指令，PC 寄存器的
值就会自动被更新为下一条指令的地址。** 假设 PC 寄存器正
指向内存中一个从 10 号地址开始的 3 字节指令。CPU 解释执行完这条指令后，PC 寄存器中的值就变成 10＋3 = 13 了。
	- 求最大公约数？可用辗转相除法（先用大数除以小数，得出商和余数，然后在用小数除以余数， 往复循环， 直到余数为0）
	- 最小公倍数？用两个整数的乘积除以这两个整数的最大公约数
	- 判定素数？埃拉托斯特尼筛法
	- OOP？面向对象编程，三大特性：继承、封装、多态。
	- 类是对象的定义，而对象是类的实例（Instance）
	- LAN、WAN? LAN 是 Local Area Network（局域网）的缩略语。通常把在一栋建筑物内或是一间办公室里的那种小规模网络称作 LAN。与此相对，把互联网那样的大规模网络称作 WAN（Wide Area Network，广域网）。
	- TCP/IP 是什么的缩略语？TCP/IP 是 Transmission Control Protocol/Internet
Protocol（传输控制协议和网际协议）的缩略语 TCP/IP 协议族是互联网所使用的一套标准协议。TCP/IP这个名字意味着同时使用了 TCP 协议和 IP 协议
	- MAC 地址? MAC 地址就是能够标识网卡的编号。几乎所有的网卡都会在上市前被分配一个不可变更的MAC 地址。接入互联网的数量众多的计算机中，只有尚未进行任何分组处理的编号（MAC 地址）。这样的话，仅仅是寻找信息的发送目的地就要花费大量的时间。
	- 在每一块网卡所带有的 ROM（Read Only Memory，只读存储器）中，都预先烧录了一个唯一的 MAC 地址,MAC 地址是由制造厂商的编号和产品编号两部分组成的
	- 在 TCP/IP 网络中，传输的数据都会携带 MAC 地址和 IP 地址两个地址
	- “集线器”（Hub）是负责把各台计算机的网线相互连接在一起的集线设备。“路由器”（Router）是负责把公司内的网络和互联网连接起来的设备。
	- IP 地址是一个 32 比特的整数，每 8 比特为一组，组间用“.”分隔，分成 4 段表示。8 比特所表示的整数换算成十进制后范围是0～255，因此可用作 IP 地址的整数是 0.0.0.0～255.255.255.255，共计4294967296 个。
	- 例如，在 AAA.BBB.CCC 这个公司内，如果有一台计算机的编号是 ×××，那么它的 IP 地址就是 AAA.BBB.CCC.XXX。AAA.BBB.CCC 比如这一部分是网络地址，而 XXX 或 YYY 的部分是主机地址。
	- Subnet Mask 后面的 255.255.255.240?这一串数字是“子网掩码”。子网掩码的作用是标识出在 32 比特的 IP 地址中，从哪一位到哪一位是网络地址，从哪一位到哪一位是主机地址。 255.255.255.240 用二进制表示11111111.11111111.11111111.11110000。子网掩码中，值为 1 的那些位对应着 IP 地址中的网络地址，后面值为 0 的那些位则对应着主机地址。因此 255.255.255.240 这个子网掩码就表示，其所对应的 IP 地址前 28 比特是网络地址，后 4 比特是主机地址。4 个二进制数可以表示的范围是从 0000 到 1111，共 16 个数而因为最开始的 0000 和最后的 1111 具有特殊的用途，所以笔者的办公室内最多可以配置 14 台计算机，它们的主机地址范围是从 0001 到 1110。但是这其中又有一台路由器，所以实际上最多只能放置 13 台计算机。
	- DHCP 服务器？电脑的TCP/IP属性，可以手动设置 IP 地址和子网掩码，但是大多数情况下选择的还是“自动获得 IP 地址”这个选项，这个选项使得计算机在启动时会去从 DHCP 服务器获取 IP 地址和子网掩码，并自动地配置它们。DHCP 的全称是 Dynamic Host Configuration Protocol（动态主机设置协议）。在笔者搭建的 LAN 中，使用了一台装有 Linux(windows也可) 的计算机充当 DHCP 服务器的角色。
	- 浏览一个网页，要经过若干个路由器的转发才能达到目标计算机，这个经过路由器转发的过程称为路由。 cmd 中，tracert www.baidu.com ，会打印出一系列经过的ip地址。
	- 在互联网的世界中，本应使用 IP 地址这样的数字来标识计算机才是，而刚刚却能使用一串字符 www.grapecity.com 来标识 Grape City 的 Web 服务器。实际上，在互联网中还存在着一种叫作 DNS（Domain Name System，域名系统）的服务器。正是该服务器为我们把 www.grapecity.com 这样的域名解析为了 210.160.205.80 这样的 IP 地址 。如果一台 DNS服务器无法解析域名，它就会去询问其他的 DNS 服务器。
	- 在互联网的世界中，到处传输的都是附带了 IP 地址的数据。但是能够标识作为数据最终接收者的网卡的，还是 MAC 地址。于是在计算机中就加入了一种程序，用于实现由 IP 地址到 MAC 地址的转换，这种功能被称作 ARP（Address Resolution Protocol，地址解析协议）。工作方式：它对LAN中的所有计算机提问 谁的IP地址是xxx，有的话把MAC告诉我。并做缓存。
	- 在数字签名中使用的信息摘要是什么？信息摘要是指从作为数字签名对象的文件整体中计
算出的数值。 对比由文件整体计算出的信息摘要，可以证明文件的内容有没有被篡改。加密处理过的信息摘要就是数字签名。
	- 对称密钥加密技术？加密解密用一样的密钥。
	- 公开密钥加密技术？A发送给B，用B的公钥（可以公开给任何人）加密发送, B用B的私钥解密。
	XML是什么的缩写？XML 是 Extensible Markup Language（可扩展标记语言）的缩写。 所谓标记语言，就是可以用标签为数据赋予意义的语言。


- 《程序是怎样跑起来的》
	> 天天在写代码，突然昨天分享会谈到代码是怎么编译怎么运行起来的？运行顺序是什么？发现以前掌握的知识溜了一大半，回头再看看这本也是n年前看过的入门书，热身+1！ 2021-07-24,花了3.5天看完~
	- 什么是机器语言？CPU可以**直接识别并使用**的语言。由01组成。
	- 计算机的构成与案件中，负责程序的解释和运行的是哪个？CPU
	- CPU的内部由n个**寄存器**、控制器、运算器、时钟四个部分组成。寄存器可用来暂存指令、数据等处理对象，可以看作内存的一中。控制器负责把内存上的指令、数据等读入寄存器，并根据指令的执行结果控制计算机。运算器负责运算从内存读入寄存器的数据。时钟负责发出CPU开始计时的时钟信号，时钟信号的频率越高，CPU的运行速度越快。
	- 编译是指将使用高级编程语言编写的程序转换为机器语言的过程。比如，a = 1+2这样的高级语言的代码程序在转化成机器语言后，就是利用**寄存器**进行相加运算和存储处理的。
	- 寄存器大致分为八类。
		- **累加寄存器**(后面统一称jcq)：存储执行运输的数据和运算后的数据，只有一个
		- 标志jcq：存储运算处理后的CPU的状态，只有一个
		- 程序jcq：存储下一条指令所在的内存地址，只有一个
		- **基质jcq**:存储数据内存的起始地址，多个
		- **变址jcq**:存储基址寄存器的相对地址，多个
		- 通用jcq:存储任意数据，多个
		- 指令jcq:存储指令。CPU内部使用，程序员无法通过程序对其进行读写操作（程序员可以忽略），只有一个
		- 栈jcq:存储栈区域的起始地址，多个
	- 寄存器中存储的内容既可以是**指令**也可以是**数据**。数据分为“用于运算的数值”和“表示内存地址的数值”。
	- 用于运算的数值放在**累加寄存器**中存储，表示内存地址的数值放在**基质寄存器和变址寄存器**中存储。
	- 标志寄存器，保存运算结果的是负数、零还是正数。32位CPU指的是用32位的二进制数表示数据和地址的数值。标志寄存器的第1，2，3个字节位的值为1时，表示运算结果分别为正数、0和负数。
	- 数组分割特定的内存区域以达到连续查看的目的。拿32位寄存器来说，查看10000000地址~1000FFFF地址，可以将10000000存入基址寄存器，并使变址寄存器的值在00000000~0000FFFFF变化，CPU则会把基址寄存器+变址寄存器的值解释为实际查看的内存地址。变址寄存器的值相当于高级编程语言中数组的索引功能
	- 二进制左移后会变成原来的2、4、8 倍等，右移后会变成原来的1/2、1/4、1/8等
	- 1 的8位二进制数是00000001，取-1的8位二进制，取1的补数 +1 =》 11111110 + 1 = 11111111。
	- -4(= 11111110)右移两位，逻辑位移是左边补0，变成00111111也就是十进制数63，显然不是-4的1/4，而算术右移的情况下会变成11111111，用部署表示就是 -1。只有在右移时才必须区分逻辑位移和算术位移，左移都是补0.
	- 符号扩充？以8位二进制为例，符号扩充就是在保持值不变的前提下将其装换成16位的二进制数。
	不管是正数还是用补数表示的负数，只需要用符号位的值（0或1）填充高位即可。
	- 算术运算是指加减乘除四则运算，逻辑运算是指将二进制数各数字位的0和1 分别进行处理的运算。 not ，and or xor,逻辑非、与、或、异或
	- 通过使用内存赖提高磁盘访问速度的机制是什么？磁盘缓存
	- 把磁盘的一部分作为假想内存来使用的机制是什么？虚拟内存，借助虚拟内存，哪怕是内存容量不足的计算机，也可以运行很大的程序。
	- windows计算机，一般磁盘的1个扇区是多少字节？512字节，扇区是磁盘保存数据的物理单位。例子：拿一个记事本文件并增加一些文字保存。当文件大小未达到512字节时候，查看磁盘空间已占用512，一旦达到513字节，空间磁盘就变成1024字节。
	- RLE压缩算法 适用于压缩图像和EXE文件，不适用文本文件，例：AAAAAABBCDDEEEEEEF=>A6B2C1D2E5F1,数据*重复次数。连续部分多才适用。
	- 运行环境 = 操作系统 + 硬件

- 《深入理解计算机系统》
	> 2021-07-28 第一章，后面待定。。
	- GCC编译器驱动程序读取源程序文件hello.c,并把它翻译成一个可执行目标文件hello。这个翻译过程可分为4个阶段完成。
		- 预处理阶段。 hello.c 源代码，预处理器(cpp)根据以字符#开头的命令，修改原始的C程序。比如第一行的#include<stdio.h>会读取系统头文件stdio.h的内容，并把它直接插如程序文本中，得到另一个C程序,通常是以.i作为文件拓展名。
		- 编译阶段。编译器（ccl）将文本文件hello.i翻译成文本文件hello.s，它包含一个汇编语言程序。汇编语言用途：它为不同高级语言的不同编译器提供了通用的输出语言
		- 汇编阶段。汇编器(as) 将hello.s翻译成机器语言指令，把这些指令打包成hello.o二进制文件。
		- 链接阶段。例：hello程序调用了printf函数，他是每个C编译器都提供的标准C库中的一个函数，printf函数存在于一个名为printf.o的单独的预编译号了的目标文件，这个文件就必须合并到hello.o程序中，链接器就负责这种合并，这样就得到了hello 文件。这是一个可执行文件，可以被加载到内存中，由系统执行。
		- 十进制如何转十六进制? 当值是2的非负整数n次幂，x= 2^n, 可以容易地将x写成16进制形式，只要记住x的二进制表示就是1后面跟n个0。16进制数字0代表4个二进制0。当n表示称i+4j的形式（0<=i<=3）,我们可以把xi而成开头的十六进制数字为1(i=0)、2(i=1)、4(i=2)或者8(i=3),后面跟随着j个十六进制的0，比如，x=2048=2……11，我们有n=11=3+4*2,从而得到十六进制表示0x800。